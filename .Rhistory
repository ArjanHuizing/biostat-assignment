f2 <- function(n, piE, piC, numsim = 1000, alpha=0.025){
sE <- rbinom(numsim, (0.5*n), piE)
sC <- rbinom(numsim, (0.5*n), piC)
pvals <- sapply(1:numsim, FUN = function(i) prop.test(x = c(sE[i], sC[i]), n = c((0.5*n), (0.5*n)),
alternative = "less")$p.value)
n.signif <- mean(pvals < alpha)
fulltrial <- sum((pvals > alpha) == TRUE)
nonsig <- numeric(0)
for(i in 1:numsim){
if(pvals[i] < alpha){
nonsig[i] <- 0
}
else{
nonsig[i] <- 1
}
}
r.sE <- nonsig*sE
r.sE <- r.sE[!r.sE %in% 0]
sE2 <- rbinom(fulltrial, (0.5*n), piE)
sEt <- (r.sE+sE2)
r.sC <- nonsig*sC
r.sC <- r.sC[!r.sC %in% 0]
sC2 <- rbinom(fulltrial, (0.5*n), piE)
sCt <- (r.sC+sC2)
pvals2 <- sapply(1:length(sEt), FUN = function(i) prop.test(x = c(sEt[i], sCt[i]), n = c(n, n),
alternative = "less")$p.value)
n.signif.retrial <- mean(pvals2 < alpha)
n.signif2 <- (n.signif.retrial*(fulltrial/numsim))
n.signif + n.signif2
}
f2(1500, piE, piC, numsim = 1000) # 0.549
piE <- 0.35
piC <- 0.4
f2(1500, piE, piC, numsim = 1000) # 0.549
f1(1500, piE, piC, numsim = 1000) # 0.792
f2 <- function(n, piE, piC, numsim = 1000, alpha=0.025){
sE <- rbinom(numsim, (0.5*n), piE)
sC <- rbinom(numsim, (0.5*n), piC)
pvals <- sapply(1:numsim, FUN = function(i) prop.test(x = c(sE[i], sC[i]), n = c((0.5*n), (0.5*n)),
alternative = "less")$p.value)
n.signif <- mean(pvals < alpha)
fulltrial <- sum((pvals > alpha) == TRUE)
nonsig <- numeric(0)
for(i in 1:numsim){
if(pvals[i] < alpha){
nonsig[i] <- 0
}
else{
nonsig[i] <- 1
}
}
r.sE <- nonsig*sE
r.sE <- r.sE[!r.sE %in% 0]
sE2 <- rbinom(fulltrial, (0.5*n), piE)
sEt <- (r.sE+sE2)
r.sC <- nonsig*sC
r.sC <- r.sC[!r.sC %in% 0]
sC2 <- rbinom(fulltrial, (0.5*n), piC)
sCt <- (r.sC+sC2)
pvals2 <- sapply(1:length(sEt), FUN = function(i) prop.test(x = c(sEt[i], sCt[i]), n = c(n, n),
alternative = "less")$p.value)
n.signif.retrial <- mean(pvals2 < alpha)
n.signif2 <- (n.signif.retrial*(fulltrial/numsim))
n.signif + n.signif2
}
f2(1500, piE, piC, numsim = 1000) # 0.549
f2(1500, piE, piC, numsim = 1000) # 0.549
f2(1500, piE, piC, numsim = 1000) # 0.8
f2(1500, piE, piC, numsim = 1000) # 0.8
f2(1500, piE, piC, numsim = 1000) # 0.8
f2(1500, piE, piC, numsim = 1000) # 0.8-0.83
f2(1500, piE, piC, numsim = 1000) # 0.8-0.83
f1(1500, piE, piC, numsim = 1000) # 0.792
f1 <- function(n, piE, piC, numsim = 1000){
sE <- rbinom(numsim, n, piE)
sC <- rbinom(numsim, n, piC)
pvals <- sapply(1:numsim, FUN = function(i) prop.test(x = c(sE[i], sC[i]), n = c(n, n),
alternative = "less")$p.value)
mean(pvals < 0.025)
}
#It gener
f1(1500, piE, piC, numsim = 1000) # 0.792
f1(1500, piE, piC, numsim = 1000) # 0.792
f1(1500, piE, piC, numsim = 1000) # 0.792
f2(1500, piE, piC, numsim = 1000) # 0.8-0.83
f2(1500, piE, piC, numsim = 1000) # 0.8-0.83
piE <- 0.35
piC <- 0.4
seq(100,2000,by=100)
y <- NULL
for (n in seq(100,2000,by=100)){
y[n] <- (f2(n, piE, piC, numsim = 1000))
}
y <- y[seq(100,2000,by=100)]
y
plot(numbs, y)
abline(h=0.8, col="red")
treatment arm to obtain a power of 0.80?
piE <- 0.35
piC <- 0.4
numbs <- seq(100, 2000, by=100)
y <- NULL
for (n in numbs){
y[n] <- (f1(n, piE, piC, numsim = 1000))
}
f1(100, piE, piC, numsim = 1000) #0.092
f1(200, piE, piC, numsim = 1000) #0.146
f1(300, piE, piC, numsim = 1000) #0.222
y <- y[numbs]
y
plot(numbs, y)
abline(h=0.8, col="red")
piE <- 0.35
piC <- 0.4
seq(100,2000,by=100)
y <- NULL
for (n in seq(100,2000,by=100)){
y[n] <- (f2(n, piE, piC, numsim = 1000))
}
y <- y[seq(100,2000,by=100)]
y
plot(numbs, y)
abline(h=0.8, col="red")
f1r <- numeric(0)
f2r <- numeric(0)
for(i in 1:1000){
f2r[i] <- f2(1500, piE, piC, numsim = 1000)
f1r[i] <- f1(1500, piE, piC, numsim = 1000)
}
mean(f1r)
mean(f2r)
?ttest
?t.test()
t.test(c(f1r,f2r))
xmat <- matrix(data=NA,nrow=1000,ncol=2)
xmat[1,]
xmat[1:1000,1] <- f1r
xmat
xmat[1:1000,2] <- f2r
t.test(xmat)
diff <- f1r - f2r
diff
t.test(diff)
diff <- f2r - f1r
t.test(diff)
mean(f1r)
mean(f2r)
